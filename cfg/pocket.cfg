################################################ 
# |============[$0000 - $1FFF ($2000) ]======| #
# | ZP LIB       ($0000 - $002F)             | #
# | ZEROPAGE     ($0030 - $00FF)             | #
# | 6502 STACK   ($0100 - $01FF)             | #
# | MEM LIB      ($0200 - $02FF)             | #
# | BSS          ($0300 - $0FFF)             | #
# | HEAP         ($1000 - $1FFF)             | #
# | C-STACK      ($1000 - $1FFF)             | #
# |==========================================| #
#                                              #
# |============[$2000 - $7FFF ($6000) ]======| #
# | GAME IMAGE                               | #
# | DXHEAD   ($2000 - $20FF)                 | #
# | STARTUP                                  | #
# | ONCE                                     | #
# | CODE                                     | #
# | RODATA                                   | #
# |==========================================| #
#                                              #
#                                              #
# |============[$8000 - $FFFF ($8000) ]======| #
# | ROM                                      | #
# |==========================================| #
#                                              #
################################################ 

MEMORY {
            ZP0:   start = $0   , size = $0030;
            ZP1:   start = $30  , size = $00D0;
            RAM:   start = $0300, size = $1D00;
            GAME:  start = $2000, size = $6000, fill=yes, fillval=$00;
            ROM:   start = $8000, size = $8000, fill=no;
        }
SEGMENTS {
    ZEROPAGE:  load = ZP1,   type = zp,  define   = yes;
    BSS:       load = RAM,   type = bss, define   = yes;
    HEAP:      load = RAM,   type = bss, start=$1000, optional = yes;
    DXHEAD:    load = GAME, type = rw;
    STARTUP:   load = GAME,  type = rw;
    ONCE:      load = GAME,  type = rw,  optional = yes;
    CODE:      load = GAME,  type = rw;
	DATA:      load = GAME,  type = rw,  define   = yes;
    RODATA:    load = GAME,  type = rw;
    METADATA:  load = GAME,  type = rw,  start = $7FC0;
}

FEATURES {
    CONDES:    segment = STARTUP,
               type    = constructor,
               label   = __CONSTRUCTOR_TABLE__,
               count   = __CONSTRUCTOR_COUNT__;
    CONDES:    segment = STARTUP,
               type    = destructor,
               label   = __DESTRUCTOR_TABLE__,
               count   = __DESTRUCTOR_COUNT__;
    STARTADDRESS: default= $2000;
}

SYMBOLS {
    # Define the stack size for the application
    __STACKSTART__: type = export, value = $1000;
    __STACKSIZE__: type = weak, value = $1000;
}
