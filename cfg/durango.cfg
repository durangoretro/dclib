################################################ 
# |============[$0000 - $1FFF ($2000) ]======| #
# | ZP LIB       ($0000 - $002F)             | #
# | ZEROPAGE     ($0030 - $00FF)             | #
# | 6502 STACK   ($0100 - $01FF)             | #
# | MEM LIB      ($0200 - $02FF)             | #
# | BSS          ($0300 - $0FFF)             | #
# | HEAP         ($1000 - $1FFF)             | #
# | C-STACK      ($1000 - $1FFF)             | #
# |==========================================| #
#                                              #
# |============[$2000 - $3FFF ($2000) ]======| #
# | MENU ($2000 - $3FFF)                     | #
# |==========================================| #
#                                              #
# |============[$4000 - $5FFF ($2000) ]======| #
# | BACKGROUND CACHE ($4000 - $5FFF)         | #
# |==========================================| #
#                                              #
# |============[$6000 - $7FFF ($2000) ]======| #
# | VIDEO ($6000 - 7FFF)                     | #
# |==========================================| #
#                                              #
# |============[$8000 - $9FFF ($2000) ]======| #
# | DXHEAD   ($8000 - $80FF)                 | #
# | STARTUP  ($8100 - $8FFF)                 | #
# | ONCE                                     | #
# | CODE                                     | #
# |==========================================| #
#                                              #
# |============[$A000 - $BFFF ($2000) ]======| #
# | CODE                                     | #
# |==========================================| #
#                                              #
# |============[$C000 - $DFFF ($2000) ]======| #

# | FORBIDEN ($DF00 - $DF7F)                 | #
# | IO       ($DF80 - $DFFF)                 | #
# |==========================================| #
#                                              #
# |============[$E000 - $FFFF ($2000) ]======| #
# | RODATA   ($E000 - $FF5F)                 | #
# | METADATA ($FF60 - $FFF9)                 | #
# | VECTORS  ($FFFA - $FFFF)                 | #
# |==========================================| #
################################################ 

MEMORY {
            ZP0:   start = $0   , size = $0030;
            ZP1:   start = $30  , size = $00D0;
            RAM:   start = $0300, size = $1D00;
            VIDEO: start = $6000, size = $2000;
            ROM1H: start = $8000, size = $0100, fill=yes, fillval=$ff;
            ROM1:  start = $8100, size = $3F00, fill=yes, fillval=$ff;
            ROM2:  start = $C000, size = $1F00, fill=yes, fillval=$ff;
            FORB:  start = $DF00, size = $0080, fill=yes, fillval=$21;
            IO:    start = $DF80, size = $0080, fill=yes, fillval=$23;
            ROM3:  start = $E000, size = $2000, fill=yes, fillval=$ff;
        }
SEGMENTS {
    ZEROPAGE:  load = ZP1,   type = zp,  define   = yes;
    DATA:      load = ROM2,  type = rw,  define   = yes, run = RAM;
    BSS:       load = RAM,   type = bss, define   = yes;
    HEAP:      load = RAM,   type = bss, start=$1000, optional = yes;
    DXHEAD:    load = ROM1H, type = ro;
    STARTUP:   load = ROM1,  type = ro;
    ONCE:      load = ROM1,  type = ro,  optional = yes;
    CODE:      load = ROM1,  type = ro;
    RODATA:    load = ROM2,  type = ro;
    HEADER:    load = IO,    type = ro,  optional = yes;
    METADATA:  load = ROM3,  type = ro,  start = $FF60;
    VECTORS:   load = ROM3,  type = ro,  start = $FFFA;
}

FEATURES {
    CONDES:    segment = STARTUP,
               type    = constructor,
               label   = __CONSTRUCTOR_TABLE__,
               count   = __CONSTRUCTOR_COUNT__;
    CONDES:    segment = STARTUP,
               type    = destructor,
               label   = __DESTRUCTOR_TABLE__,
               count   = __DESTRUCTOR_COUNT__;
    STARTADDRESS: default= $8000;
}

SYMBOLS {
    # Define the stack size for the application
    __STACKSTART__: type = export, value = $1000;
    __STACKSIZE__: type = weak, value = $1000;
}
